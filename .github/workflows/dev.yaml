
name: 'Terraform - Dev'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: select terraform action
        options:
        - apply
        - destroy
        required: true
  push:
    branches: 
    - dev
    paths:
    - dev/**
  pull_request:
    branches:
    - dev
    paths: 
    - dev/**
jobs:
  terraform:
    name: 'Terraform'
    env:
      #  AWS secrets
      TF_VAR_project: 'demo'
      TF_VAR_env: 'dev'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY }}
      
    runs-on: ubuntu-latest
    environment: production

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.7
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: './dev'
        tf_actions_comment: true
       # args: '-var="env=dev"'
    
    - name: Terraform plan
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.7
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: './dev'
        tf_actions_comment: true
      #  args: '-var="env=dev"'

    - name: Terraform apply
      if: ${{ github.event.inputs.terraform_action == 'apply' }}
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.7
        tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
        tf_actions_working_dir: './dev'
        tf_actions_comment: true
        #args: '-auto-approve -var="env=dev"'

    - name: Terraform destroy
      if: ${{ github.event.inputs.terraform_action == 'destroy' }}
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.7
        tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
        tf_actions_working_dir: './dev'
        tf_actions_comment: true
        #args: '-auto-approve -var="env=dev"'
